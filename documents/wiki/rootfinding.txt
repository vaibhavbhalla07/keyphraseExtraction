mathematics computing root finding algorithm algorithm finding roots continuous functions root function f real numbers real numbers complex numbers complex numbers number x f x generally roots function cannot computed exactly expressed closed form root finding algorithms provide approximations roots expressed either floating point numbers small isolating intervals disks complex roots interval disk output equivalent approximate output together error bound solving equation f x g x finding roots function f g thus root finding algorithms allow solving equation defined continuous functions however generally root finding algorithms find roots without indication roots found particularly root found possible roots found numerical root finding methods use iteration producing sequence numbers hopefully converge towards root limit require one initial guesses root starting values iteration algorithm produces successively accurate approximation root since iteration must stopped point methods produce approximation root exact solution many methods compute subsequent values evaluating auxiliary function preceding values limit thus fixed point auxiliary function chosen roots original equation fixed points converging rapidly fixed points behaviour root finding algorithms studied numerical analysis efficiency algorithm may depend dramatically characteristics given functions example many algorithms use derivative input function others work every continuous function general numerical algorithms guaranteed find roots function failing find root prove root however polynomials specific algorithms use algebraic properties locating roots intervals disks complex roots small enough ensure convergence numerical methods typically newton method unique root located