cache stampede type cascading failure occur massively parallel computing systems caching mechanisms come high load behaviour sometimes also called dog piling understand cache stampedes occur consider web server uses memcached cache rendered pages period time ease system load particularly high load single url system remains responsive long resource remains cached requests handled accessing cached copy minimizes expensive rendering operation low load cache misses result single recalculation rendering operation system continue average load kept low high cache hit rate however heavy load cached version page expires may sufficient concurrency server farm multiple threads execution attempt render content page simultaneously systematically none concurrent servers know others rendering time sufficiently high load present may enough bring congestion collapse system via exhausting shared resources congestion collapse results preventing page ever completely re rendered re cached every attempt times thus cache stampede reduces cache hit rate zero keeps system continuously congestion collapse attempts regenerate resource long load remains heavy give concrete example assume page consideration takes seconds render traffic requests per second cached page expires processes simultaneously recomputing rendering page updating cache rendered page